if (obj.id == "win-newACL")
{
	var treeAuth = "auth";
	var treeUnAuth = "unauth";
	var conn = new Ext.data.Connection();
	
	var users = new Ext.tree.TreePanel ( {
			title: 'Users',
			id:'new-acl-users-panel',
			cellCls:'td-new-website-users-panel',
			iconCls:'icon-users',
			border:true,
			height: 175,
			xtype: 'treepanel',
			autoScroll: true,
			rootVisible: true,
			lines: true,
			singleExpand: false,
			useArrows: true,
			animate: true,
			dataUrl:'?act=loadInterface&lt=Users',
			enableDD:true,
			ddGroup:'listUsr',
			root: {
				nodeType: 'async',
				draggable:false,
				text: 'Users',
				id:'node-root',
				iconCls:'tree-server'
			}
		}
	);
				
	var auth = new Ext.tree.TreePanel ( {
			title: 'Authorized users',
			id:'new-acl-auth-users-panel',
			cellCls:'td-new-website-auth-users-panel',
			iconCls:'icon-user-auth',
			border:true,
			height: 175,
			xtype: 'treepanel',
			autoScroll: true,
			rootVisible: true,
			lines: true,
			singleExpand: true,
			useArrows: true,
			animate: true,
			dataUrl:'?act=loadInterface&lt=AUTHUsers',
			enableDD:true,
			ddGroup:'listUsr',
			root: {
				nodeType: 'async',
				draggable:false,
				text: 'Users',
				iconCls:'tree-valid'
			},
			listeners: {
				append: function (tree, parent, node, index) {
					treeAuth = treeAuth + "/" + node.id
				},
				beforemovenode: function (tree, node, oldParent, newParent, index) {
					var newAuth = "";
					var tmpAuth = treeAuth.split('/');
					for (i=0; i<tmpAuth.length; i++) {
						if((tmpAuth[i] != node.id) && (node.id != '') && (tmpAuth[i] != '')) {
							newAuth = newAuth + tmpAuth[i] + '/';
							if ((i+1) < tmpAuth.length) {
								newAuth = newAuth + '/';
							}
						}
					}
					treeAuth = newAuth;
				}
			}
		}
	);

	var unAuth = new Ext.tree.TreePanel ( {
			title: 'Unauthorized users',
			id:'new-acl-unauth-users-panel',
			cellCls:'td-new-website-unauth-users-panel',
			iconCls:'icon-user-unauth',
			border:true,
			height: 175,
			xtype: 'treepanel',
			autoScroll: true,
			rootVisible: true,
			lines: true,
			singleExpand: true,
			useArrows: true,
			animate: true,
			dataUrl:'?act=loadInterface&lt=UNAUTHUsers',
			enableDD:true,
			ddGroup:'listUsr',
			root: {
				nodeType: 'async',
				draggable:false,
				text: 'Users',
				iconCls:'tree-stop'
			},
			listeners: {
				append: function (tree, parent, node, index) {
					treeUnAuth = treeUnAuth + "/" + node.id
				},
				beforemovenode: function (tree, node, oldParent, newParent, index) {
					var newUnAuth = "";
					var tmpUnAuth = treeUnAuth.split('/');
					for (i=0; i<tmpUnAuth.length; i++) {
						if((tmpUnAuth[i] != node.id) && (node.id != '') && (tmpUnAuth[i] != '')) {
							newUnAuth = newUnAuth + tmpUnAuth[i];
							if ((i+1) < tmpUnAuth.length) {
								newUnAuth = newUnAuth + '/';
							}
						}
					}
					treeUnAuth = newUnAuth;
				}			
			}
		}
	);

	var newACLWizard = {
		xtype:'tabpanel',
		plain: false,
		activeTab: 0,
		height:235,
		deferredRender: false,
		defaults:{bodyStyle:'padding:0px'},
		items: [ {
				title:'Role informations',
				id: 'new-acl-informations-form',
				iconCls:'icon-infos',
				layout:'form',
				xtype: 'form',
				html: '<div style="padding: 5px; background: whie; color: royalblue; font-size: 20px; font-weight: bold; width: 128px; height: 128px; top: -120px; left: -200px; position: relative;"><img src="<?php echo $this->get('img')?>list_add_b.png" width=128 height=128></div>',
				defaults: {width: 230},
				bodyStyle: 'padding-left: 230px; padding-top: 60px;',
				items: [ {
						id:'new-acl-roleName',
						fieldLabel: 'Role name',
						anchor:'95%',
						xtype: 'textfield',
						minLength: 3,
						maxLength: 100,
						minLengthText: 'Display name must be at least 3 characters long.',
						maxLengthText: 'Display name must not be bigger than 100 characters long.',
						blankText: 'You must give a Role name',
						allowBlank:false
					},
					new Ext.form.TextArea ( {
							id:'new-acl-roleDescription',
							wrap:'on',
							anchor:'95%',
							fieldLabel: 'Description',
						}
					)
				]
			}, {	
				title:'Security',
				iconCls:'icon-lock-break',
				baseCls:'x-plain',
				layout:'table',
				layoutConfig: {
					columns: 3
				},
				items: [
					users,
					auth,
					unAuth
				]
			}
		],
		buttons: [ {
				text: 'Save',
				id: 'new-acl-save-btn',
				handler: function() {
					var roleName = Ext.get('new-acl-roleName').dom.value;
					var	roleDescription = Ext.get('new-acl-roleDescription').dom.value;
					
					msgWait('EnsKa Core is creating the new ACL-Role ' + roleName +'...');
					var req = conn.request ( {
							url: '?act=execPlg&plg=newACL',
							method: 'POST',
							params: "data=" + 'create::' + treeAuth + '::' + treeUnAuth + '::' + roleName + '::' + roleDescription,
							success: function(resObj) {
								if (resObj.responseText == 'success') {
									msgOk('The ACL-Role ' + roleName + ' has been created !');
									winNewACL.close();
								}
								else {
									msgError(resObj.responseText);
								}
							}
						}
					);
				}
			}, {
				text: 'Cancel',
				handler: function() {
					winNewACL.close();
				}
			}
		]
	};

	var winNewACL = new Ext.Window ( {
			closeAction: 'close',
			layout: "fit",
			modal: true,
			resizable: false,
			closable: true,
			title: "Create a new ACL-Role",
			width: 625,
			height: 320,
			border: false,
			items: [
				newACLWizard
			]
		}
	);	
	users.getRootNode().expand();
	winNewACL.show();
}